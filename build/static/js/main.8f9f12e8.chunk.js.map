{"version":3,"sources":["assets/logo.svg","assets/githubBg.svg","services/api.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","api","axios","create","baseURL","Title","styled","h1","Form","form","props","hasError","css","shade","Error","span","Repositories","div","DashBoard","useState","newRepo","setNewRepo","inputError","setInputError","storagedRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","event","a","preventDefault","get","response","repository","data","useEffect","setItem","stringify","className","src","logoImg","alt","onSubmit","type","placeholder","value","onChange","e","target","map","key","full_name","to","owner","avatar_url","login","description","size","Header","RepositoryInfo","section","Issues","Repository","params","useRouteMatch","setRepository","issues","setIssues","then","logoimg","stargazers_count","forks_count","open_issues_count","issue","href","html_url","id","title","user","Routes","path","exact","component","createGlobalStyle","githubBg","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f9f12e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/githubBg.fe82ec00.svg\";","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n\tbaseURL: 'https://api.github.com',\r\n})\r\n\r\nexport default api;","import styled, {css} from 'styled-components';\n\nimport {shade} from 'polished'\n\ninterface FormProps{\n\thasError: boolean;\n}\n\n\nexport const Title = styled.h1`\n\tfont-size: 48px;\n\tcolor: #3a4a4a;\n\n\tmax-height: 450px;\n\tline-height: 56px;\n\tmargin-top: 80px;\n`\n\nexport const Form = styled.form<FormProps>`\n\tmargin-top: 40px;\n\tmax-width: 700px;\n\n\tdisplay: flex;\n\n\t\tinput{\n\t\t\tflex: 1;\n\t\t\theight: 70px;\n\t\t\tpadding: 0 24px;\n\t\t\tborder: 0;\n\t\t\tborder-radius: 5px 0 0 5px;\n\t\t\tcolor: #3a3a3a;\n\t\t\tborder: 2px solid #fff;\n\t\t\tborder-right: 0;\n\n\t\t\t${(props) => props.hasError && css`\n\t\t\t\tborder-color: #c53030;\n\t\t\t`}\n\n\t\t\t&::placeholder{\n\t\t\t\tcolor: #a8a8b3;\n\t\t\t}\n\n\t\t}\n\n\t\tbutton{\n\t\t\twidth: 210px;\n\t\t\theight: 70px;\n\t\t\tbackground: #04D361;\n\t\t\tborder-radius: 0px 5px 5px 0px;\n\t\t\tborder: 0;\n\t\t\tcolor: #fff;\n\t\t\tfont-weight: bold;\n\t\t\ttransition: background-color 0.2s;\n\n\t\t&:hover{\n\t\t\tbackground: ${shade(0.2, '#04D361')};\n\t\t\tcursor: pointer;\n\n\t\t}\n\n\t}\n\n`\n\nexport const Error = styled.span`\n\tdisplay: block;\n\tcolor: #c53030;\n\tmargin-top: 8px;\n`\n\nexport const Repositories = styled.div`\n\tmargin-top: 80px;\n\tmax-width: 700px;\n\n\ta{\n\t\tbackground: #fff;\n\t\tborder-radius: 5px;\n\t\twidth: 100%;\n\t\tpadding: 24px;\n\t\tdisplay: block;\n\t\ttext-decoration: none;\n\n\t\tdisplay: flex;\n\t\talign-items: center;\n\n\t\ttransition: transform 0.2s;\n\n\t\t&:hover{\n\t\t\ttransform: translateX(10px);\n\t\t\tcursor: pointer;\n\t\t}\n\n\t\t& + a{\n\t\t\tmargin-top: 16px;\n\t\t}\n\n\n\t\timg{\n\t\t\twidth: 64px;\n\t\t\theight: 64px;\n\t\t\tborder-radius: 50%;\n\t\t}\n\n\t\tdiv{\n\t\t\tmargin: 0 16px;\n\t\t\tflex: 1;\n\n\t\t\tstrong{\n\t\t\t\tfont-size: 20px;\n\t\t\t\tcolor: #3d3d4d;\n\t\t\t}\n\n\t\t\tp{\n\t\t\t\tfont-size: 18px;\n\t\t\t\tcolor: #A8A8B3;\n\t\t\t\tmargin-top: 4px;\n\t\t\t}\n\n\t\t}\n\n\t\tsvg{\n\t\t\t\tmargin-left: auto;\n\t\t\t\tcolor: #cbcbd6;\n\t\t\t}\n\t}\n`\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n// eslint-disable-next-line\nimport React, { useState, useEffect, FormEvent } from 'react';\nimport api from '../../services/api';\nimport { Link } from 'react-router-dom';\n//style\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Title, Form, Repositories, Error } from './styles';\nimport logoImg from '../../assets/logo.svg';\n\n\ninterface Repository {\n\tfull_name: string;\n\tdescription: string;\n\towner: {\n\t\tlogin: string;\n\t\tavatar_url: string;\n\t};\n}\n\nconst DashBoard: React.FC = () => {\n\tconst [newRepo, setNewRepo] = useState('');\n\tconst [inputError, setInputError] = useState('');\n\tconst [repositories, setRepositories] = useState<Repository[]>(() => {\n\t\tconst storagedRepositories = localStorage.getItem(\n\t\t\t'@GithubExplorer:repositories',\n\t\t);\n\t\tif (storagedRepositories) {\n\t\t\treturn JSON.parse(storagedRepositories);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\n\t\t\t'@GithubExplorer:repositories',\n\t\t\tJSON.stringify(repositories),\n\t\t);\n\t}, [repositories]);\n\n\tasync function handleAddRepository(\n\t\tevent: FormEvent<HTMLFormElement>,\n\t): Promise<void> {\n\t\tevent.preventDefault();\n\n\t\tif (!newRepo) {\n\t\t\treturn setInputError('Digite o autor/nome do repositorio');\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await api.get<Repository>(`/repos/${newRepo}`);\n\t\t\tconst repository = response.data;\n\t\t\tsetRepositories([...repositories, repository]);\n\t\t\tsetNewRepo('');\n\t\t\tsetInputError('');\n\t\t} catch (err) {\n\t\t\tsetInputError('Erro na busca por esse repositorio');\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"dashboard-container\">\n\t\t\t<img src={logoImg} alt=\"Github Explorer\" />\n\t\t\t<Title>Explore Repositorios do GitHub</Title>\n\t\t\t<Form hasError={!!inputError} onSubmit={handleAddRepository}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Digite o nome do repositorio\"\n\t\t\t\t\tvalue={newRepo}\n\t\t\t\t\tonChange={e => setNewRepo(e.target.value)}\n\t\t\t\t/>\n\n\t\t\t\t<button type=\"submit\"> Pesquisar</button>\n\t\t\t</Form>\n\n\t\t\t{inputError && <Error> {inputError} </Error>}\n\n\t\t\t<Repositories>\n\t\t\t\t{repositories.map(repository => (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tkey={repository.full_name}\n\t\t\t\t\t\tto={`/repository/${repository.full_name}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={repository.owner.avatar_url}\n\t\t\t\t\t\t\talt={repository.owner.login}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<strong> {repository.full_name} </strong>\n\t\t\t\t\t\t\t<p> {repository.description} </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FiChevronRight size={20} />\n\t\t\t\t\t</Link>\n\t\t\t\t))}\n\t\t\t</Repositories>\n\t\t</div>\n\t);\n};\n\nexport default DashBoard;\n","import styled from 'styled-components'\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\n\ta{\n\t\tdisplay: flex;\n\t\talign-items:center;\n\t\ttext-decoration: none;\n\t\tcolor: #a8a8b3;\n\t\ttransition: color 0.2s;\n\n\t\t&:hover{\n\t\t\tcolor: #666;\n\t\t}\n\n\t\tsvg{\n\t\t\tmargin-right: 4px;\n\t\t}\n\t}\n`\n\nexport const RepositoryInfo = styled.section`\n\n\tmargin-top: 80px;\n\n\theader{\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex-wrap: wrap;\n\n\t\timg{\n\t\t\twidth: 120px;\n\t\t\theight: 120px;\n\t\t\tborder-radius: 50%;\n\n\t\t}\n\n\t\tdiv{\n\t\t\tmargin-left: 24px;\n\t\t\tstrong{\n\t\t\t\tfont-size: 36px;\n\t\t\t\tcolor: #3d3d4d;\n\t\t\t}\n\t\t\tp{\n\t\t\t\tfont-size: 18px;\n\t\t\t\tcolor: #737380;\n\t\t\t\tmargin-top: 4px;\n\n\t\t\t}\n\t\t}\n\t}\n\n\t\tul{\n\t\t\tdisplay: flex;\n\t\t\tlist-style: none;\n\t\t\tmargin-top: 40px;\n\n\t\t\tli{\n\t\t\t\t& + li {\n\t\t\t\t\tmargin-left: 80px;\n\t\t\t\t}\n\n\t\t\t\tstrong{\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tfont-size: 36px;\n\n\t\t\t\t\tcolor: #3d3d4d;\n\t\t\t\t}\n\t\t\t\tspan{\n\t\t\t\tdisplay: block;\n\t\t\t\tmargin-top: 4px;\n\t\t\t\tcolor: #6c6c80;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n`\nexport const Issues = styled.div`\n\tmargin-top: 80px;\n\n\n\ta{\n\t\tbackground: #fff;\n\t\tborder-radius: 5px;\n\t\twidth: 100%;\n\t\tpadding: 24px;\n\t\tdisplay: block;\n\t\ttext-decoration: none;\n\n\t\tdisplay: flex;\n\t\talign-items: center;\n\n\t\ttransition: transform 0.2s;\n\n\t\t&:hover{\n\t\t\ttransform: translateX(10px);\n\t\t\tcursor: pointer;\n\t\t}\n\n\t\t& + a{\n\t\t\tmargin-top: 16px;\n\t\t}\n\n\n\t\tdiv{\n\t\t\tmargin: 0 16px;\n\t\t\tflex: 1;\n\n\t\t\tstrong{\n\t\t\t\tfont-size: 20px;\n\t\t\t\tcolor: #3d3d4d;\n\t\t\t}\n\n\t\t\tp{\n\t\t\t\tfont-size: 18px;\n\t\t\t\tcolor: #A8A8B3;\n\t\t\t\tmargin-top: 4px;\n\t\t\t}\n\n\t\t}\n\n\t\tsvg{\n\t\t\t\tmargin-left: auto;\n\t\t\t\tcolor: #cbcbd6;\n\t\t\t}\n\t}\n`\n","// @typescript-eslint/no-unused-vars\n// eslint-disable-next-line\nimport React, { useEffect, useState } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport api from '../../services/api';\n//imgs + styles\nimport logoimg from '../../assets/logo.svg';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport { Header, RepositoryInfo, Issues } from './styles';\n\ninterface RepositoryParms {\n\trepository: string;\n}\n\ninterface Repository {\n\tfull_name: string;\n\tdescription: string;\n\tstargazers_count: number;\n\tforks_count: number;\n\topen_issues_count: number;\n\towner: {\n\t\tlogin: string;\n\t\tavatar_url: string;\n\t};\n}\n\ninterface Issue {\n\ttitle: string;\n\tid: number;\n\tuser: {\n\t\tlogin: string;\n\t};\n\thtml_url: string;\n}\n\nconst Repository: React.FC = () => {\n\tconst { params } = useRouteMatch<RepositoryParms>();\n\tconst [repository, setRepository] = useState<Repository | null>(null);\n\t// eslint-disable-next-line\n\tconst [issues, setIssues] = useState<Issue[]>([]);\n\n\tuseEffect(() => {\n\t\tapi.get(`repos/${params.repository}`).then(response => {\n\t\t\tsetRepository(response.data);\n\t\t});\n\n\t\tapi.get(`repos/${params.repository}/issues`).then(response => {\n\t\t\tsetIssues(response.data);\n\t\t});\n\t}, [params.repository]);\n\n\treturn (\n\t\t<>\n\t\t\t<Header>\n\t\t\t\t<img src={logoimg} alt=\"Github Explorer\" />\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<FiChevronLeft size={16} />\n\t\t\t\t\tvoltar\n\t\t\t\t</Link>\n\t\t\t</Header>\n\t\t\t{repository && (\n\t\t\t\t<RepositoryInfo>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<img src={repository.owner.avatar_url} />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<strong> {repository.full_name} </strong>\n\t\t\t\t\t\t\t<p> {repository.description} </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>{repository.stargazers_count}</strong>\n\t\t\t\t\t\t\t<span> Stars </span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong> {repository.forks_count} </strong>\n\t\t\t\t\t\t\t<span> Forks </span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>{repository.open_issues_count}</strong>\n\t\t\t\t\t\t\t<span> Issues Abertos</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</RepositoryInfo>\n\t\t\t)}\n\t\t\t<Issues>\n\t\t\t\t{issues?.map(issue => (\n\t\t\t\t\t<a href={issue.html_url} target=\"__blank\" key={issue.id}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<strong> {issue.title} </strong>\n\t\t\t\t\t\t\t<p> {issue.user.login} </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FiChevronRight size={20} />\n\t\t\t\t\t</a>\n\t\t\t\t))}\n\t\t\t</Issues>\n\t\t</>\n\t);\n};\n\nexport default Repository;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport DashBoard from \"../pages/Dashboard\";\nimport Repository from \"../pages/Repository/index\";\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={DashBoard} />\n      <Route path=\"/Repository/:repository+\"  component={Repository} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nimport githubBg from '../assets/githubBg.svg'\r\n\r\nexport default createGlobalStyle`\r\n*{\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\toutline: 0;\r\n\tbox-sizing: border-box;\r\n\r\n}\r\n\r\nbody{\r\n\tbackground: #F0F0FA url(${githubBg}) no-repeat 70% top;\r\n\t-webkit-font-smoothing: antialiased;\r\n\t\r\n}\r\n\r\nbody, input, button{\r\n\tfont: 16px Roboto, sans-serif;\r\n}\r\n\r\n#root{\r\n\tmax-width: 960px;\r\n\tmargin: auto;\r\n\tpadding: 40px 20px;\r\n}\r\n\r\n`","import React from \"react\";\nimport Routes from \"./routes\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport GlobalStyle from \"./styles/global\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n      <GlobalStyle />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}