{"ast":null,"code":"var _jsxFileName = \"/Volumes/hdmac/github-explorer/src/pages/Dashboard/index.tsx\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport api from '../../services/api'; //style\n\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Title, Form, Repositories, Error } from './styles';\nimport logoImg from \"../../assets/logo.svg\";\nimport Repository from '../Repository';\n\nconst DashBoard = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {});\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      return setInputError('Digite o autor/nome do repositorio');\n    }\n\n    try {\n      const response = await api.get(`/repos/${newRepo}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca por esse repositorio');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, \"Explore Repositorios do GitHub\"), /*#__PURE__*/React.createElement(Form, {\n    hasError: !!inputError,\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Digite o nome do repositorio\",\n    value: newRepo,\n    onChange: e => setNewRepo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \" Pesquisar\")), inputError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, \" \", inputError, \" \"), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"a\", {\n    key: repository.full_name,\n    href: \"teste\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 8\n    }\n  }, \" \", repository.full_name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 8\n    }\n  }, \" \", repository.description, \" \")), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  })))));\n};\n\nexport default DashBoard;","map":{"version":3,"sources":["/Volumes/hdmac/github-explorer/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","api","FiChevronRight","Title","Form","Repositories","Error","Repository","DashBoard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","handleAddRepository","event","preventDefault","response","get","repository","data","err","logoImg","e","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect, FormEvent } from 'react';\nimport api from '../../services/api';\n//style\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Title, Form, Repositories, Error } from './styles';\nimport logoImg from '../../assets/logo.svg';\nimport Repository from '../Repository';\n\ninterface Repository {\n\tfull_name: string;\n\tdescription: string;\n\towner: {\n\t\tlogin: string;\n\t\tavatar_url: string;\n\t};\n}\n\nconst DashBoard: React.FC = () => {\n\tconst [newRepo, setNewRepo] = useState('');\n\tconst [inputError, setInputError] = useState('');\n\tconst [repositories, setRepositories] = useState<Repository[]>([]);\n\n\tuseEffect(() => {})\n\n\tasync function handleAddRepository(\n\t\tevent: FormEvent<HTMLFormElement>,\n\t): Promise<void> {\n\t\tevent.preventDefault();\n\n\t\tif (!newRepo) {\n\t\t\treturn setInputError('Digite o autor/nome do repositorio');\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await api.get<Repository>(`/repos/${newRepo}`);\n\t\t\tconst repository = response.data;\n\t\t\tsetRepositories([...repositories, repository]);\n\t\t\tsetNewRepo('');\n\t\t\tsetInputError('');\n\t\t} catch (err) {\n\t\t\tsetInputError('Erro na busca por esse repositorio');\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"dashboard-container\">\n\t\t\t<img src={logoImg} alt=\"Github Explorer\" />\n\t\t\t<Title>Explore Repositorios do GitHub</Title>\n\t\t\t<Form hasError={!!inputError} onSubmit={handleAddRepository}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Digite o nome do repositorio\"\n\t\t\t\t\tvalue={newRepo}\n\t\t\t\t\tonChange={e => setNewRepo(e.target.value)}\n\t\t\t\t/>\n\n\t\t\t\t<button type=\"submit\"> Pesquisar</button>\n\t\t\t</Form>\n\n\t\t\t{inputError && <Error> {inputError} </Error>}\n\n\t\t\t<Repositories>\n\t\t\t\t{repositories.map(repository => (\n\t\t\t\t\t<a key={repository.full_name} href=\"teste\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={repository.owner.avatar_url}\n\t\t\t\t\t\t\talt={repository.owner.login}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<strong> {repository.full_name} </strong>\n\t\t\t\t\t\t\t<p> {repository.description} </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FiChevronRight size={20} />\n\t\t\t\t\t</a>\n\t\t\t\t))}\n\t\t\t</Repositories>\n\t\t</div>\n\t);\n};\n\nexport default DashBoard;\n"]},"metadata":{},"sourceType":"module"}