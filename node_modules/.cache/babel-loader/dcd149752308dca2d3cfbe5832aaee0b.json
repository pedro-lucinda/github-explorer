{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/hdmac/github-explorer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Volumes/hdmac/github-explorer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Volumes/hdmac/github-explorer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/hdmac/github-explorer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable jsx-a11y/anchor-is-valid */ // eslint-disable-next-line\nimport React,{useState,useEffect}from'react';import api from'../../services/api';import{Link}from'react-router-dom';//style\nimport{FiChevronRight}from'react-icons/fi';import{Title,Form,Repositories,Error}from'./styles';import logoImg from\"../../assets/logo.svg\";var DashBoard=function DashBoard(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),newRepo=_useState2[0],setNewRepo=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),inputError=_useState4[0],setInputError=_useState4[1];var _useState5=useState(function(){var storagedRepositories=localStorage.getItem('@GithubExplorer:repositories');if(storagedRepositories){return JSON.parse(storagedRepositories);}else{return[];}}),_useState6=_slicedToArray(_useState5,2),repositories=_useState6[0],setRepositories=_useState6[1];useEffect(function(){localStorage.setItem('@GithubExplorer:repositories',JSON.stringify(repositories));},[repositories]);function handleAddRepository(_x){return _handleAddRepository.apply(this,arguments);}function _handleAddRepository(){_handleAddRepository=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var response,repository;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(newRepo){_context.next=3;break;}return _context.abrupt(\"return\",setInputError('Digite o autor/nome do repositorio'));case 3:_context.prev=3;_context.next=6;return api.get(\"/repos/\".concat(newRepo));case 6:response=_context.sent;repository=response.data;setRepositories([].concat(_toConsumableArray(repositories),[repository]));setNewRepo('');setInputError('');_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](3);setInputError('Erro na busca por esse repositorio');case 16:case\"end\":return _context.stop();}}},_callee,null,[[3,13]]);}));return _handleAddRepository.apply(this,arguments);}return/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-container\"},/*#__PURE__*/React.createElement(\"img\",{src:logoImg,alt:\"Github Explorer\"}),/*#__PURE__*/React.createElement(Title,null,\"Explore Repositorios do GitHub\"),/*#__PURE__*/React.createElement(Form,{hasError:!!inputError,onSubmit:handleAddRepository},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Digite o nome do repositorio\",value:newRepo,onChange:function onChange(e){return setNewRepo(e.target.value);}}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\" Pesquisar\")),inputError&&/*#__PURE__*/React.createElement(Error,null,\" \",inputError,\" \"),/*#__PURE__*/React.createElement(Repositories,null,repositories.map(function(repository){return/*#__PURE__*/React.createElement(Link,{key:repository.full_name,to:\"/repository/\".concat(repository.full_name)},/*#__PURE__*/React.createElement(\"img\",{src:repository.owner.avatar_url,alt:repository.owner.login}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"strong\",null,\" \",repository.full_name,\" \"),/*#__PURE__*/React.createElement(\"p\",null,\" \",repository.description,\" \")),/*#__PURE__*/React.createElement(FiChevronRight,{size:20}));})));};export default DashBoard;","map":{"version":3,"sources":["/Volumes/hdmac/github-explorer/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","api","Link","FiChevronRight","Title","Form","Repositories","Error","DashBoard","newRepo","setNewRepo","inputError","setInputError","storagedRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","setItem","stringify","handleAddRepository","event","preventDefault","get","response","repository","data","logoImg","e","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":"ylBAAA,6C,CACA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAAsD,OAAtD,CACA,MAAOC,CAAAA,GAAP,KAAgB,oBAAhB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA;AACA,OAASC,cAAT,KAA+B,gBAA/B,CACA,OAASC,KAAT,CAAgBC,IAAhB,CAAsBC,YAAtB,CAAoCC,KAApC,KAAiD,UAAjD,C,2CAaA,GAAMC,CAAAA,SAAmB,CAAG,QAAtBA,CAAAA,SAAsB,EAAM,eACHT,QAAQ,CAAC,EAAD,CADL,wCAC1BU,OAD0B,eACjBC,UADiB,8BAEGX,QAAQ,CAAC,EAAD,CAFX,yCAE1BY,UAF0B,eAEdC,aAFc,8BAGOb,QAAQ,CAAe,UAAM,CACpE,GAAMc,CAAAA,oBAAoB,CAAGC,YAAY,CAACC,OAAb,CAC5B,8BAD4B,CAA7B,CAGA,GAAIF,oBAAJ,CAA0B,CACzB,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWJ,oBAAX,CAAP,CACA,CAFD,IAEO,CACN,MAAO,EAAP,CACA,CACD,CAT+C,CAHf,yCAG1BK,YAH0B,eAGZC,eAHY,eAcjCnB,SAAS,CAAC,UAAM,CACfc,YAAY,CAACM,OAAb,CACC,8BADD,CAECJ,IAAI,CAACK,SAAL,CAAeH,YAAf,CAFD,EAIA,CALQ,CAKN,CAACA,YAAD,CALM,CAAT,CAdiC,QAqBlBI,CAAAA,mBArBkB,qKAqBjC,iBACCC,KADD,0IAGCA,KAAK,CAACC,cAAN,GAHD,GAKMf,OALN,yDAMSG,aAAa,CAAC,oCAAD,CANtB,+CAUyBX,CAAAA,GAAG,CAACwB,GAAJ,kBAA8BhB,OAA9B,EAVzB,QAUQiB,QAVR,eAWQC,UAXR,CAWqBD,QAAQ,CAACE,IAX9B,CAYET,eAAe,8BAAKD,YAAL,GAAmBS,UAAnB,GAAf,CACAjB,UAAU,CAAC,EAAD,CAAV,CACAE,aAAa,CAAC,EAAD,CAAb,CAdF,iFAgBEA,aAAa,CAAC,oCAAD,CAAb,CAhBF,qEArBiC,sDAyCjC,mBACC,2BAAK,SAAS,CAAC,qBAAf,eACC,2BAAK,GAAG,CAAEiB,OAAV,CAAmB,GAAG,CAAC,iBAAvB,EADD,cAEC,oBAAC,KAAD,uCAFD,cAGC,oBAAC,IAAD,EAAM,QAAQ,CAAE,CAAC,CAAClB,UAAlB,CAA8B,QAAQ,CAAEW,mBAAxC,eACC,6BACC,IAAI,CAAC,MADN,CAEC,WAAW,CAAC,8BAFb,CAGC,KAAK,CAAEb,OAHR,CAIC,QAAQ,CAAE,kBAAAqB,CAAC,QAAIpB,CAAAA,UAAU,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,EAJZ,EADD,cAQC,8BAAQ,IAAI,CAAC,QAAb,eARD,CAHD,CAcErB,UAAU,eAAI,oBAAC,KAAD,UAASA,UAAT,KAdhB,cAgBC,oBAAC,YAAD,MACEO,YAAY,CAACe,GAAb,CAAiB,SAAAN,UAAU,qBAC3B,oBAAC,IAAD,EACC,GAAG,CAAEA,UAAU,CAACO,SADjB,CAEC,EAAE,uBAAiBP,UAAU,CAACO,SAA5B,CAFH,eAIC,2BACC,GAAG,CAAEP,UAAU,CAACQ,KAAX,CAAiBC,UADvB,CAEC,GAAG,CAAET,UAAU,CAACQ,KAAX,CAAiBE,KAFvB,EAJD,cAQC,4CACC,sCAAUV,UAAU,CAACO,SAArB,KADD,cAEC,iCAAKP,UAAU,CAACW,WAAhB,KAFD,CARD,cAYC,oBAAC,cAAD,EAAgB,IAAI,CAAE,EAAtB,EAZD,CAD2B,EAA3B,CADF,CAhBD,CADD,CAqCA,CA9ED,CAgFA,cAAe9B,CAAAA,SAAf","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n// eslint-disable-next-line\nimport React, { useState, useEffect, FormEvent } from 'react';\nimport api from '../../services/api';\nimport { Link } from 'react-router-dom';\n//style\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Title, Form, Repositories, Error } from './styles';\nimport logoImg from '../../assets/logo.svg';\n\n\ninterface Repository {\n\tfull_name: string;\n\tdescription: string;\n\towner: {\n\t\tlogin: string;\n\t\tavatar_url: string;\n\t};\n}\n\nconst DashBoard: React.FC = () => {\n\tconst [newRepo, setNewRepo] = useState('');\n\tconst [inputError, setInputError] = useState('');\n\tconst [repositories, setRepositories] = useState<Repository[]>(() => {\n\t\tconst storagedRepositories = localStorage.getItem(\n\t\t\t'@GithubExplorer:repositories',\n\t\t);\n\t\tif (storagedRepositories) {\n\t\t\treturn JSON.parse(storagedRepositories);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\n\t\t\t'@GithubExplorer:repositories',\n\t\t\tJSON.stringify(repositories),\n\t\t);\n\t}, [repositories]);\n\n\tasync function handleAddRepository(\n\t\tevent: FormEvent<HTMLFormElement>,\n\t): Promise<void> {\n\t\tevent.preventDefault();\n\n\t\tif (!newRepo) {\n\t\t\treturn setInputError('Digite o autor/nome do repositorio');\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await api.get<Repository>(`/repos/${newRepo}`);\n\t\t\tconst repository = response.data;\n\t\t\tsetRepositories([...repositories, repository]);\n\t\t\tsetNewRepo('');\n\t\t\tsetInputError('');\n\t\t} catch (err) {\n\t\t\tsetInputError('Erro na busca por esse repositorio');\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"dashboard-container\">\n\t\t\t<img src={logoImg} alt=\"Github Explorer\" />\n\t\t\t<Title>Explore Repositorios do GitHub</Title>\n\t\t\t<Form hasError={!!inputError} onSubmit={handleAddRepository}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Digite o nome do repositorio\"\n\t\t\t\t\tvalue={newRepo}\n\t\t\t\t\tonChange={e => setNewRepo(e.target.value)}\n\t\t\t\t/>\n\n\t\t\t\t<button type=\"submit\"> Pesquisar</button>\n\t\t\t</Form>\n\n\t\t\t{inputError && <Error> {inputError} </Error>}\n\n\t\t\t<Repositories>\n\t\t\t\t{repositories.map(repository => (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tkey={repository.full_name}\n\t\t\t\t\t\tto={`/repository/${repository.full_name}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={repository.owner.avatar_url}\n\t\t\t\t\t\t\talt={repository.owner.login}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<strong> {repository.full_name} </strong>\n\t\t\t\t\t\t\t<p> {repository.description} </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FiChevronRight size={20} />\n\t\t\t\t\t</Link>\n\t\t\t\t))}\n\t\t\t</Repositories>\n\t\t</div>\n\t);\n};\n\nexport default DashBoard;\n"]},"metadata":{},"sourceType":"module"}